"""Create tables generalPhrases and I18nGeneralPhrases

Revision ID: a6eba1db4488
Revises: 4d6127588ac7
Create Date: 2023-05-18 14:37:22.319406

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql
from sqlalchemy import String, Integer
from sqlalchemy.sql import table, column

# revision identifiers, used by Alembic.
revision = "a6eba1db4488"
down_revision = "4d6127588ac7"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "general_phrases",
        sa.Column("phrase_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "phrase_desc",
            mysql.MEDIUMTEXT(collation="utf8mb4_unicode_ci"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("phrase_id", name=op.f("pk_general_phrases")),
        mysql_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "i18n_general_phrases",
        sa.Column("phrase_id", sa.Integer(), nullable=False),
        sa.Column("user_name", sa.Unicode(length=80), nullable=False),
        sa.Column("lang_code", sa.Unicode(length=5), nullable=False),
        sa.Column(
            "phrase_desc",
            mysql.MEDIUMTEXT(collation="utf8mb4_unicode_ci"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["lang_code"],
            ["i18n.lang_code"],
            name=op.f("fk_i18n_general_phrases_lang_code_i18n"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["phrase_id"],
            ["general_phrases.phrase_id"],
            name=op.f("fk_i18n_general_phrases_phrase_id_general_phrases"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_name"],
            ["user.user_name"],
            name=op.f("fk_i18n_general_phrases_user_name_user"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "phrase_id", "user_name", "lang_code", name=op.f("pk_i18n_general_phrases")
        ),
    )

    phrases = [
        {"phrase_id": "1", "phrase_desc": "Tied"},
        {"phrase_id": "2", "phrase_desc": "Worse"},
        {"phrase_id": "3", "phrase_desc": "Other"},
        {"phrase_id": "4", "phrase_desc": "Better"},
        {"phrase_id": "5", "phrase_desc": "Device IMEI"},
        {"phrase_id": "6", "phrase_desc": "Not observed"},
        {"phrase_id": "7", "phrase_desc": "End of survey"},
        {"phrase_id": "8", "phrase_desc": "Registration"},
        {"phrase_id": "9", "phrase_desc": "Start of survey"},
        {"phrase_id": "10", "phrase_desc": "requires a value"},
        {"phrase_id": "11", "phrase_desc": "Data collection"},
        {"phrase_id": "12", "phrase_desc": "Add the other value here"},
        {"phrase_id": "13", "phrase_desc": "Validation of the selected participant"},
        {
            "phrase_id": "14",
            "phrase_desc": "The scanned QR is incorrect, it is not for this project",
        },
        {
            "phrase_id": "15",
            "phrase_desc": "In the following field try to write the name of the participant to filter the information and find him/her more easily.",
        },
        {
            "phrase_id": "16",
            "phrase_desc": "You selected package number:",
        },
        {
            "phrase_id": "17",
            "phrase_desc": "You scanned package number:",
        },
        {
            "phrase_id": "18",
            "phrase_desc": "This package belongs to:",
        },
    ]

    general_phrases = table(
        "general_phrases",
        column("phrase_id", Integer),
        column("phrase_desc", String),
    )
    op.bulk_insert(general_phrases, phrases)

    i18nPhrasesEs = [
        {
            "phrase_id": "1",
            "user_name": "bioversity",
            "lang_code": "es",
            "phrase_desc": "Empate",
        },
        {
            "phrase_id": "2",
            "user_name": "bioversity",
            "lang_code": "es",
            "phrase_desc": "Peor",
        },
        {
            "phrase_id": "3",
            "user_name": "bioversity",
            "lang_code": "es",
            "phrase_desc": "Otro",
        },
        {
            "phrase_id": "4",
            "user_name": "bioversity",
            "lang_code": "es",
            "phrase_desc": "Mejor",
        },
        {
            "phrase_id": "5",
            "user_name": "bioversity",
            "lang_code": "es",
            "phrase_desc": "Dispositivo IMEI",
        },
        {
            "phrase_id": "6",
            "user_name": "bioversity",
            "lang_code": "es",
            "phrase_desc": "No observada",
        },
        {
            "phrase_id": "7",
            "user_name": "bioversity",
            "lang_code": "es",
            "phrase_desc": "Final de la encuesta",
        },
        {
            "phrase_id": "9",
            "user_name": "bioversity",
            "lang_code": "es",
            "phrase_desc": "Inicio de encuesta",
        },
        {
            "phrase_id": "10",
            "user_name": "bioversity",
            "lang_code": "es",
            "phrase_desc": "requiere un valor",
        },
        {
            "phrase_id": "12",
            "user_name": "bioversity",
            "lang_code": "es",
            "phrase_desc": "Agrega aquí el otro valor",
        },
        {
            "phrase_id": "13",
            "user_name": "bioversity",
            "lang_code": "es",
            "phrase_desc": "Validación del participante seleccionado",
        },
        {
            "phrase_id": "14",
            "user_name": "bioversity",
            "lang_code": "es",
            "phrase_desc": "El QR escaneado es incorrecto, no es para este proyecto",
        },
        {
            "phrase_id": "15",
            "user_name": "bioversity",
            "lang_code": "es",
            "phrase_desc": "En el siguiente campo intenta escribir el nombre del participante para filtrar la información y encontrarlo más fácilmente.",
        },
        {
            "phrase_id": "16",
            "user_name": "bioversity",
            "lang_code": "es",
            "phrase_desc": "Usted seleccionó el paquete número:",
        },
        {
            "phrase_id": "17",
            "user_name": "bioversity",
            "lang_code": "es",
            "phrase_desc": "Usted escaneó el paquete número:",
        },
        {
            "phrase_id": "18",
            "user_name": "bioversity",
            "lang_code": "es",
            "phrase_desc": "Este paquete pertenece a:",
        },
    ]

    i18n_general_phrases = table(
        "i18n_general_phrases",
        column("phrase_id", Integer),
        column("user_name", String),
        column("lang_code", String),
        column("phrase_desc", String),
    )
    op.bulk_insert(i18n_general_phrases, i18nPhrasesEs)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("i18n_general_phrases")
    op.drop_table("general_phrases")
    # ### end Alembic commands ###
