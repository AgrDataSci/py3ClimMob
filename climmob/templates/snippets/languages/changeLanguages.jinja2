<div class="ibox">
    <div class="ibox-title text-center" >
        <h5> {{ _("Select the languages to be used with the participants") }}</h5>

        <div class="ibox-tools">
            <a class="btn btn-success btn-rounded  btn-xs" style="color: white" onclick="showHelp()"><i class="fa fa-question-circle"></i> {{  _("Show help") }}</a>
        </div>
    </div>

    <div class="ibox-content" id="div_for_languages">

        <select id="select_lang" name="select_lang" class="form-control" style="width: 100%; !important;">
            <option value="">{{ _("Write here to filter the languages") }}</option>
{#            {% for lang in listOfLanguages %}#}
{#                <option value="{{ lang.lang_code }}">{{ lang.lang_name }}</option>#}
{#            {% endfor %}#}
        </select>

        <br>

        <div id="result_of_the_languages" style="margin-bottom: 20px; margin-top: 30px; {% if limiteHeight %}max-height: 300px;overflow-y: scroll;{% endif %}">

        </div>

    </div>
</div>

<script>

    $(document).ready(function() {

        {% if help %}
            showHelp();
        {% endif %}

        function formatLanguage (language) {
            if (!language.id) {
                return language.text;
            }
            let $state = $(
                '<span>' + language.text + '</span>'
            );
            return $state;
        }

        $('#select_lang').select2({
            {% if isModal %}
                dropdownParent: $("#languagesParent"),
            {% endif %}
            templateResult: formatLanguage,
            ajax: {
                url: "{{ request.route_url('APIlanguages', user=activeUser.login) }}",
                dataType: 'json',
                delay: 250,
                data: function (params) {
                    return {
                        q: params.term, // search term
                        page: params.page
                    };
                },
                processResults: function (data, params) {
                    params.page = params.page || 1;
                    return {
                        results: data.results,
                        pagination: {
                            more: (params.page * 10) < data.total
                        }
                    };
                },
                cache: true
            }
        });

        updateUserLanguages();

        $("#select_lang").change(function (){
            var value = $(this).val();

            if (value !="")
            {
                $.ajax({
                    url: '{{ request.route_url('addUserLanguage') }}',
                    datatype: "json",
                    type: "POST",
                    data: {
                        "csrf_token": '{{ request.session.get_csrf_token() }}',
                        "lang_code": value,
                    },
                    success: function (response) {
                        if (response["result"] == "success")
                        {
                            toastr.success(response["message"]);
                            $("#select_lang").val("");
                            //$("#select_lang option[value='"+value+"']").remove();
                            $("#select_lang").trigger("change.select2");
                            updateUserLanguages();
                        }else{
                            toastr.error(response["message"]);
                        }

                    },
                    error: function (response) {
                        toastr.error("{{ _("There was a problem updating the languages") }}");
                    }
                });
            }
        });
    });

    function updateUserLanguages(){

        $.get("{{ request.route_url('getUserLanguagesPreview', user=activeUser.login) }}", function (dataJson, status) {

            $("#result_of_the_languages").html(dataJson)

            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });

            $("input[name=default_language]").on('ifChecked',function(){

                $.ajax({
                    url: '{{ request.route_url('changeDefaultLanguage', user=activeUser.login) }}',
                    datatype: "json",
                    type: "POST",
                    data: {
                        "csrf_token": '{{ request.session.get_csrf_token() }}',
                        "lang_code": $("input[name=default_language]:checked").val(),
                    },
                    success: function (response) {
                        if (response["result"] == "success")
                        {
                            toastr.success(response["message"]);
                        }else{
                            toastr.error(response["message"]);
                        }

                    },
                    error: function (response) {
                        toastr.error("{{ _("There was a problem updating the default languages") }}");
                    }
                });
            });

        })
    }

    function myCustomAction(){
        updateUserLanguages();
    }

    function showHelp()
    {

        var tour = new Tour({
            steps: [
                    {
                        element: "#div_for_languages",
                        title: "{{ _("Select the languages to be used with the participants") }}",
                        content: "- {{ _("You must indicate at least one language to continue working in ClimMob.") }}<br>- {{ _("These will be used to create questions, projects and forms in multiple languages.") }}<br>- {{ _("You can add the languages you consider necessary.") }}<br><br><b>{{ _("Default") }}:</b><br>{{ _("The questions you have created and the ones you will create later will take the language marked as default.") }}<br><br><b>{{ _("We are using the language database: Ethnologue") }}</b><br>Eberhard, David M., Gary F. Simons, and Charles D. Fennig (eds.). 2023. Ethnologue: Languages of the World. Twenty-sixth edition. Dallas, Texas: SIL International. Online version: <a href='http://www.ethnologue.com' target='_blank'>http://www.ethnologue.com</a>.",
                        placement: "right"
                    }
                   ],
            template: "<div class='popover tour' style='border-color: #23c6c8; max-width: none; width:400px; z-index:10000'><div class='arrow' ></div><h3 class='popover-title btn-info'></h3><div class='popover-content'></div><div class='popover-navigation'> <button class='btn btn-sm btn-danger' data-role='end'><i class='fa fa-close'></i> {{ _("Close") }}</button> </div>",
            backdrop: true,
            backdropContainer: 'body'
        });

        // Initialize the tour
        tour.init();
        tour.restart();
    }



</script>